@page "/producto/index"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject ILocalStorageService _localStorageService

<MudText Typo="Typo.h2" Class="ml">Productos</MudText>

<MudTable Items="@productos" Hover="true" Bordered="true" Striped="true">
    <ToolBarContent>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="goAdd" />
        <MudSpacer />
        @*<MudTextField @bind-Value="searchText" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>*@
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Categoria</MudTh>
        <MudTh>Producto</MudTh>
        <MudTh>Detalles</MudTh>
        <MudTh>Precio</MudTh>
        <MudTh>Imagen</MudTh>
        <MudTh>Acciones</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Categoria">@context.Categorias.Categoria</MudTd>
        <MudTd DataLabel="Producto">@context.Producto</MudTd>
        <MudTd DataLabel="Detalles">@context.Detalles</MudTd>
        <MudTd DataLabel="Precio">@context.Precio.ToString("0.##")</MudTd>
        <MudTd DataLabel="Imagen">@context.Imagen</MudTd>

        <MudTd>
            <MudButton Link="@($"/producto/editar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Tertiary"
                       Class="text-center">Editar</MudButton>
            <MudButton Link="@($"/producto/eliminar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Warning"
                       Class="text-center">Eliminar</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private IEnumerable<Productos> productos = new List<Productos>();
    private string searchText = "";
    private Productos prod = new Productos();

    protected override async Task OnInitializedAsync()
    {
        httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", await _localStorageService.GetItemAsync<string>("token"));
        await getAll();
    }

    private async Task getAll()
    {
        var httpResponse = await httpClient.PostAsJsonAsync("Productos/Buscar", prod);
        string respString = await httpResponse.Content.ReadAsStringAsync();
        productos = JsonSerializer.Deserialize<IEnumerable<Productos>>(respString, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }

    private void goAdd()
    {
        NavigationManager.NavigateTo("producto/agregar");
    }
}